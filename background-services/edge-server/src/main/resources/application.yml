server:
  port: 8765
  ssl:
    key-store: classpath:server.jks
    key-store-password: password
    key-password: password

    # Problem with trust-store properties?
    #
    # Instead use: java -Djavax.net.debug=ssl -Djavax.net.ssl.trustStore=src/main/resources/truststore.jks -Djavax.net.ssl.trustStorePassword=password -jar build/libs/*.jar
    #
    # trust-store: classpath:truststore.jks
    # trust-store: src/main/resources/truststore.jks
    trust-store: truststore.jks
    trust-store-password: password

info.component: Edge Server

# Disable security on the management API's, e.g. hystrix.stream, info, health, env
management.security.enabled: false

endpoints:
  enabled: false
  info.enabled: true
  health.enabled: true
  health.sensitive: true

security.oauth2.resource.userInfoUri: https://localhost:9999/uaa/user

# 1.0 means 100%, see http://cloud.spring.io/spring-cloud-sleuth/spring-cloud-sleuth.html#_sampling
spring.sleuth.sampler.percentage: 1.0

spring.rabbitmq.host: localhost
spring.rabbitmq.port: 5672

hystrix:
  threadpool:
    default:
      # Maximum number of concurrent requests when using thread pools (Default: 10)
      coreSize: 100
      # Maximum LinkedBlockingQueue size - -1 for using SynchronousQueue (Default: -1)
      maxQueueSize: -1
      # Queue size rejection threshold (Default: 5)
      queueSizeRejectionThreshold: 5
  command:
    default:
      circuitBreaker:
        sleepWindowInMilliseconds: 30000
        requestVolumeThreshold: 20
      execution:
        isolation:
          # strategy: SEMAPHORE, no thread pool but timeout handling stops to work
          strategy: THREAD
          thread:
            timeoutInMilliseconds: 10000

zuul:
  ignoredServices: "*"
  prefix: /api
  routes:
    composite-service:
      path: /composite/**
      url: http://composite-service:8080/composite-resource

logging:
  level:
    ROOT: WARN
    se.callista: INFO

    # Set DEBUG level to activate our log-filter to log each request and response
    org.springframework.web.filter.CommonsRequestLoggingFilter: DEBUG

    # Get info regarding connection to the cofig server and retries if required
    org.springframework.cloud.config.client.ConfigServicePropertySourceLocator: INFO
    org.springframework.retry.support.RetryTemplate: DEBUG

    # Set INFO to see the allocated port
    org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer: INFO
    org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer: INFO

    # Set DEBUG level on Hystrix to get an error message when a fallback method is used.
    com.netflix.hystrix: DEBUG
    com.netflix.hystrix.strategy.properties.HystrixPropertiesChainedArchaiusProperty: WARN

    # Good low level HTTP log settings when required...
    # Note that the HTTP request/response logging will bloat the log due continous to polls to Eureka...
#    org.apache.http.wire: INFO
#    org.apache.http.impl.conn: DEBUG
#    org.apache.http.impl.client: DEBUG
#    org.apache.http.client: DEBUG
#    org.apache.http: DEBUG

---
# For deployment in Docker containers
spring:
  profiles: docker

security.oauth2.resource.userInfoUri: https://auth-server:9999/uaa/user

spring.rabbitmq.host: rabbitmq
